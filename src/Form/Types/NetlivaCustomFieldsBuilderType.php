<?phpnamespace Netliva\SymfonyFormBundle\Form\Types;use Symfony\Component\Form\AbstractType;use Symfony\Component\Form\Extension\Core\Type\TextType;use Symfony\Component\Form\FormBuilderInterface;use Symfony\Component\Form\FormEvent;use Symfony\Component\Form\FormEvents;use Symfony\Component\Form\FormInterface;use Symfony\Component\Form\FormView;use Symfony\Component\OptionsResolver\OptionsResolver;class NetlivaCustomFieldsBuilderType extends AbstractType{    public function configureOptions(OptionsResolver $resolver): void    {        $resolver->setDefaults(array(		   'widget'          => 'single_text',		   'compound'        => false,		   'multiple'        => true,		   'show_field_keys' => false,        ));    }    public function getBlockPrefix(): string    {        return 'netliva_customfield_builder';    }    public function getParent()    {        return TextType::class;    }    public function buildForm(FormBuilderInterface $builder, array $options): void    {		$builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) {			$event->setData(json_decode($event->getData(), true));		});    }    public function buildView (FormView $view, FormInterface $form, array $options): void    {		$view->vars['show_field_keys'] = $options['show_field_keys'];	}}