<?phpnamespace Netliva\SymfonyFormBundle\Form\Types;use Symfony\Component\Form\AbstractType;use Symfony\Component\Form\Extension\Core\Type\TextType;use Symfony\Component\Form\FormBuilderInterface;use Symfony\Component\Form\FormEvent;use Symfony\Component\Form\FormEvents;use Symfony\Component\Form\FormInterface;use Symfony\Component\Form\FormView;use Symfony\Component\OptionsResolver\OptionsResolver;class NetlivaTrueFalseListType extends AbstractType{    public function configureOptions(OptionsResolver $resolver): void    {        $resolver->setDefaults(array(		   'widget'   => 'single_text',		   'compound' => false,		   'options'  => [],		   'sortable' => true,		   'on_text'   => '',		   'off_text'  => '',		   'size'     => 'mini',		   'on_color'  => 'success',		   'off_color' => 'danger',		));    }    public function getBlockPrefix(): string    {        return 'netliva_tflist';    }    public function getParent()    {        return TextType::class;    }    public function buildForm(FormBuilderInterface $builder, array $options): void    {		$builder->addEventListener(FormEvents::PRE_SUBMIT, function (FormEvent $event) {			$event->setData(json_decode($event->getData()));        });    }    public function buildView (FormView $view, FormInterface $form, array $options): void    {		$view->vars['switchOptions'] = [			'active-text'   => $options['on_text'],			'passive-text'  => $options['off_text'],			'active-color'  => $options['on_color'],			'passive-color' => $options['off_color'],			'size'          => $options['size'],		] ;		$view->vars['sortable'] = $options['sortable'];		$view->vars['list']     = $options['options'];	}}